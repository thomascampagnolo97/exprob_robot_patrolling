<?xml version="1.0"?>
<launch>

  <!-- Robot model passes to rviz for visualization -->
  <arg name="visualize" default="true" />
  <arg name="model" default="$(find exprob_robot_patrolling)/urdf/robot_patrolling_explorer.xacro"/>

  <!-- Param of the robot xacro -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder $(arg model)" />

  <!-- Robot simulation for rviz configuration -->
  <arg name="rvizconfig" default="$(find exprob_robot_patrolling)/config/sim_robot.rviz" />


	<!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="extra_gazebo_args" default=""/>
  <arg name="gui" default="true"/>
  <arg name="recording" default="false"/>
  <arg name="world" default="assignment_world" />
  <!-- Note that 'headless' is currently non-functional.  See gazebo_ros_pkgs issue #491 (-r arg does not disable
       rendering, but instead enables recording). The arg definition has been left here to prevent breaking downstream
       launch files, but it does nothing. -->
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="physics" default="ode"/>
  <arg name="verbose" default="false"/>
  <arg name="world_name" value="$(find exprob_robot_patrolling)/worlds/$(arg world).world"/>
  <arg name="respawn_gazebo" default="false"/>
  <arg name="use_clock_frequency" default="false"/>
  <arg name="pub_clock_frequency" default="100"/>

 
  <!-- set use_sim_time flag -->
  <param name="/use_sim_time" value="$(arg use_sim_time)"/>

  <!-- set command arguments -->
  <arg unless="$(arg paused)" name="command_arg1" value=""/>
  <arg     if="$(arg paused)" name="command_arg1" value="-u"/>
  <arg unless="$(arg recording)" name="command_arg2" value=""/>
  <arg     if="$(arg recording)" name="command_arg2" value="-r"/>
  <arg unless="$(arg verbose)" name="command_arg3" value=""/>
  <arg     if="$(arg verbose)" name="command_arg3" value="--verbose"/>
  <arg unless="$(arg debug)" name="script_type" value="gzserver"/>
  <arg     if="$(arg debug)" name="script_type" value="debug"/>

  <!-- start gazebo server-->
  <group if="$(arg use_clock_frequency)">
    <param name="gazebo/pub_clock_frequency" value="$(arg pub_clock_frequency)" />
  </group>
  <node name="gazebo" pkg="gazebo_ros" type="$(arg script_type)" respawn="$(arg respawn_gazebo)" output="screen"
	args="$(arg command_arg1) $(arg command_arg2) $(arg command_arg3) -e $(arg physics) $(arg extra_gazebo_args) $(arg world_name)" />
	
  <!-- start gazebo client -->
  <group if="$(arg gui)">
    <node name="gazebo_gui" pkg="gazebo_ros" type="gzclient" respawn="false" output="screen"/>
  </group>
	
	
  
  <!-- rviz -->
  <param name="use_gui" value="True"/>
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" ></node>
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
    <!--<remap from = "joint_states" to = "robot_patrolling_explorer/joint_states" />-->
  </node>
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" required="true" />

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot to the desired starting position -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
	args="-urdf -model robot_patrolling_explorer -param robot_description -x -6.0 -y 11.0 -z 0.05"/>

  <!-- Differential controller and joint controllers for the robot model -->
  <rosparam file="$(find exprob_robot_patrolling)/config/differential_controller.yaml" command="load" ns="/robot_patrolling_explorer" />
  <node name="controller_spawner" pkg="controller_manager" type="spawner" output="screen" args = "--namespace=/robot_patrolling_explorer
      joint_state_controller
      joint1_position_controller
      joint2_position_controller
      joint3_position_controller
      --shutdown-timeout 3">
  </node>

  <!-- SLAM-Gmapping settings -->
  <param name="use_sim_time" value="true"/>
  <node pkg="gmapping" type="slam_gmapping" name="slam_gmapping" output="screen">
    <param name="base_frame" value="base_footprint"/>
    <param name="map_update_interval" value="5.0"/>
    <param name="maxUrange" value="16.0"/>
    <param name="sigma" value="0.05"/>
    <param name="kernelSize" value="1"/>
    <param name="lstep" value="0.05"/>
    <param name="astep" value="0.05"/>
    <param name="iterations" value="5"/>
    <param name="lsigma" value="0.075"/>
    <param name="ogain" value="3.0"/>
    <param name="lskip" value="0"/>
    <param name="srr" value="0.1"/>
    <param name="srt" value="0.2"/>
    <param name="str" value="0.1"/>
    <param name="stt" value="0.2"/>
    <param name="linearUpdate" value="1.0"/>
    <param name="angularUpdate" value="0.5"/>
    <param name="temporalUpdate" value="3.0"/>
    <param name="resampleThreshold" value="0.5"/>
    <param name="particles" value="50"/>
    <param name="xmin" value="-50.0"/>
    <param name="ymin" value="-50.0"/>
    <param name="xmax" value="50.0"/>
    <param name="ymax" value="50.0"/>
    <param name="delta" value="0.05"/>
    <param name="llsamplerange" value="0.01"/>
    <param name="llsamplestep" value="0.01"/>
    <param name="lasamplerange" value="0.005"/>
    <param name="lasamplestep" value="0.005"/>
    <param name="transform_publish_period" value="0.0005"/>
  </node>
  
  <!-- Motion planning -->
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="$(find exprob_robot_patrolling)/config/costmap_common_params.yaml" command="load" ns="global_costmap"/>
    <rosparam file="$(find exprob_robot_patrolling)/config/costmap_common_params.yaml" command="load" ns="local_costmap"/>
    <rosparam file="$(find exprob_robot_patrolling)/config/local_costmap_params.yaml" command="load"/>
    <rosparam file="$(find exprob_robot_patrolling)/config/global_costmap_params.yaml" command="load"/>
    <rosparam file="$(find exprob_robot_patrolling)/config/base_local_planner_params.yaml" command="load"/>
    <rosparam file="$(find exprob_robot_patrolling)/config/move_base_params.yaml" command="load"/>
  </node>

  <!-- start marker server and marker publisher-->
  <node name="marker_server" pkg="exprob_robot_patrolling" type="marker_server" />
  <remap from="/image" to="/robot_patrolling_explorer/camera1/image_raw" />
  <node name="marker_publisher" pkg="aruco_ros"  type="marker_publisher" launch-prefix="xterm -e" />

  <!--<node pkg = "exprob_robot_patrolling" type = "robot_motion.py" name = "robot_motion"> </node>-->
</launch>
